{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlph","ALPHABET","sortByLength","LENGTH","reset","this","className","type","onClick","goods","visibleGoods","sort","firstItem","secondItem","length","getReorderedGoods","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgBE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,WAAa,WACX,EAAKD,UAAS,iBAAO,CACnBH,SAAUL,EAASU,cAdzB,EAkBEC,aAAe,WACb,EAAKH,UAAS,iBAAO,CACnBH,SAAUL,EAASY,YApBzB,EAwBEC,MAAQ,WACN,EAAKL,UAAS,iBAAO,CACnBJ,YAAY,EACZC,SAAUL,EAASM,UA3BzB,4CA+BE,WACE,IAuBA,EAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpB,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAmC,IAAbV,EAAkB,WAAa,IAC9DY,QAASH,KAAKL,WAHhB,iCAQA,wBACEO,KAAK,SACLD,UAAS,4BAAsC,IAAbV,EAAkB,WAAa,IACjEY,QAASH,KAAKH,aAHhB,4BAQA,wBACEK,KAAK,SACLD,UAAS,4BAAyBX,EAA2B,GAAb,YAChDa,QAASH,KAAKP,QAHhB,wBAQIH,IAAeC,IACjB,wBACEW,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAUJ,6BA/DsB,SACxBK,EADwB,GAGpB,IADFb,EACC,EADDA,SAAUD,EACT,EADSA,WAENe,EAAY,YAAOD,GAgBzB,OAdiB,IAAbb,GACFc,EAAaC,OAGE,IAAbf,GACFc,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAOD,EAAUE,OAASD,EAAWC,UAIrCnB,GACFe,EAAaZ,UAGRY,EA4CFK,CACCvB,EACA,CAAEI,WAAUD,eACZqB,KAAI,SAACC,GAAD,OACJ,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eApGpC,GAAyBC,IAAMC,WC9B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.63533da8.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlph = () => {\n    this.setState(() => ({\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(() => ({\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isReversed: false,\n      sortType: SortType.NONE,\n    }));\n  };\n\n  render() {\n    const getReorderedGoods = (\n      goods: string[],\n      { sortType, isReversed }: ReorderOptions,\n    ) => {\n      const visibleGoods = [...goods];\n\n      if (sortType === 1) {\n        visibleGoods.sort();\n      }\n\n      if (sortType === 2) {\n        visibleGoods.sort((firstItem, secondItem) => {\n          return firstItem.length - secondItem.length;\n        });\n      }\n\n      if (isReversed) {\n        visibleGoods.reverse();\n      }\n\n      return visibleGoods;\n    };\n\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${!(sortType === 1) ? 'is-light' : ''}`}\n            onClick={this.sortByAlph}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${!(sortType === 2) ? 'is-light' : ''}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!(isReversed) ? 'is-light' : ''}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {!(!isReversed && !sortType) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            { sortType, isReversed },\n          ).map((item) => (\n            <li data-cy=\"Good\" key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}